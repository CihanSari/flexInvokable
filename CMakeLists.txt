cmake_minimum_required(VERSION 3.8)

##
## PROJECT
## name and version
##
project(csari_flexinvokable VERSION 3.2.0 LANGUAGES CXX)

##
## INCLUDE
##
##
include(ExternalProject)

##
## OPTIONS
##
## No options yet

##
## CONFIGURATION
##
set(CSARI_FLEXINVOKABLE_TARGET_NAME               ${PROJECT_NAME})
set(CSARI_FLEXINVOKABLE_CONFIG_INSTALL_DIR        "lib/cmake/${PROJECT_NAME}"
  CACHE INTERNAL "")
set(CSARI_FLEXINVOKABLE_INCLUDE_INSTALL_DIR       "include")
set(CSARI_FLEXINVOKABLE_TARGETS_EXPORT_NAME       "${PROJECT_NAME}Targets")
set(CSARI_FLEXINVOKABLE_CMAKE_CONFIG_TEMPLATE     "cmake/config.cmake.in")
set(CSARI_FLEXINVOKABLE_CMAKE_CONFIG_DIR          "${CMAKE_CURRENT_BINARY_DIR}")
set(CSARI_FLEXINVOKABLE_CMAKE_VERSION_CONFIG_FILE "${CSARI_FLEXINVOKABLE_CMAKE_CONFIG_DIR}/${PROJECT_NAME}ConfigVersion.cmake")
set(CSARI_FLEXINVOKABLE_CMAKE_PROJECT_CONFIG_FILE "${CSARI_FLEXINVOKABLE_CMAKE_CONFIG_DIR}/${PROJECT_NAME}Config.cmake")
set(CSARI_FLEXINVOKABLE_CMAKE_PROJECT_TARGETS_FILE "${CSARI_FLEXINVOKABLE_CMAKE_CONFIG_DIR}/${PROJECT_NAME}Targets.cmake")

set(CSARI_FLEXINVOKABLE_INCLUDE_BUILD_DIR "${PROJECT_SOURCE_DIR}/include/")
message(STATUS "Building ${CSARI_FLEXINVOKABLE_INCLUDE_BUILD_DIR}")

##
## TARGET
## create target and add include path
##
add_library(${CSARI_FLEXINVOKABLE_TARGET_NAME} INTERFACE)
add_library(${PROJECT_NAME}::${CSARI_FLEXINVOKABLE_TARGET_NAME} ALIAS ${CSARI_FLEXINVOKABLE_TARGET_NAME})
target_compile_features(${CSARI_FLEXINVOKABLE_TARGET_NAME} INTERFACE cxx_std_17)

target_include_directories(
    ${CSARI_FLEXINVOKABLE_TARGET_NAME}
    INTERFACE
    $<BUILD_INTERFACE:${CSARI_FLEXINVOKABLE_INCLUDE_BUILD_DIR}>
    $<INSTALL_INTERFACE:include>
)

##
## TESTS
## create and configure the unit test target
##
include(CTest)

enable_testing()
add_subdirectory(test)

##
## INSTALL
## install header files, generate and install cmake config files for find_package()
##
include(CMakePackageConfigHelpers)
write_basic_package_version_file(
    ${CSARI_FLEXINVOKABLE_CMAKE_VERSION_CONFIG_FILE} COMPATIBILITY SameMajorVersion
)
configure_package_config_file(
    ${CSARI_FLEXINVOKABLE_CMAKE_CONFIG_TEMPLATE}
    ${CSARI_FLEXINVOKABLE_CMAKE_PROJECT_CONFIG_FILE}
    INSTALL_DESTINATION ${CSARI_FLEXINVOKABLE_CONFIG_INSTALL_DIR}
)

install(
    DIRECTORY ${CSARI_FLEXINVOKABLE_INCLUDE_BUILD_DIR}
    DESTINATION ${CSARI_FLEXINVOKABLE_INCLUDE_INSTALL_DIR}
)
install(
    FILES ${CSARI_FLEXINVOKABLE_CMAKE_PROJECT_CONFIG_FILE} ${CSARI_FLEXINVOKABLE_CMAKE_VERSION_CONFIG_FILE}
    DESTINATION ${CSARI_FLEXINVOKABLE_CONFIG_INSTALL_DIR}
)
export(
    TARGETS ${CSARI_FLEXINVOKABLE_TARGET_NAME}
    NAMESPACE ${PROJECT_NAME}::
    FILE ${CSARI_FLEXINVOKABLE_CMAKE_PROJECT_TARGETS_FILE}
)
install(
    TARGETS ${CSARI_FLEXINVOKABLE_TARGET_NAME}
    EXPORT ${CSARI_FLEXINVOKABLE_TARGETS_EXPORT_NAME}
    INCLUDES DESTINATION ${CSARI_FLEXINVOKABLE_INCLUDE_INSTALL_DIR}
)
install(
    EXPORT ${CSARI_FLEXINVOKABLE_TARGETS_EXPORT_NAME}
    NAMESPACE ${PROJECT_NAME}::
    DESTINATION ${CSARI_FLEXINVOKABLE_CONFIG_INSTALL_DIR}
)
export(PACKAGE ${PROJECT_NAME})